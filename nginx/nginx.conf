worker_processes 3;
events { worker_connections 1024; }

http {
  upstream node-app {
    server app-server:8000;
    keepalive 64;
  }
  upstream wordpress {
    server wordpress:80;
    keepalive 64;
  }
  server_tokens off;
  include /etc/nginx/blockuseragents.rules;

  proxy_cache_path /var/run/cache levels=1:2 keys_zone=STATIC:10m max_size=100m;
  proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
  proxy_cache_valid 200 60m;
  proxy_buffering off;
  # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' img-src 'self' style-src 'self' 'unsafe-inline' font-src 'self' frame-src object-src 'none'";


  #limit_req_zone $binary_remote_addr zone=one:10m rate=120r/m;

  server {
    listen 443 ssl;

    add_header X-Frame-Options SAMEORIGIN;
    add_header Cache-Control "no-store";
    expires -1;

    if ($blockedagent) {
      return 403;
    }
    if ($request_method !~ ^(GET|HEAD|POST)$) {
      return 405;
    }

    set $cors '';
    #if ($http_origin ~ '^https?://(localhost|www\.yourdomain\.com|www\.yourotherdomain\.com)') {
    #        set $cors 'true';
    #}
    set $cors 'true';
    
    if ($cors = 'true') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            # required to be able to read Authorization header in frontend
            #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
    }
    
    if ($request_method = 'OPTIONS') {
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
    }
    
    index  index.html;
    root /usr/share/nginx/html;

    location / {
      if ($host = "tacticalmastery.com") {                                                                                                                        
        return 301 https://tacticalmastery.com/tacticalsales/;                                                                                                    
      }

      proxy_cache STATIC;
      proxy_cache_bypass $http_cache_control;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto https;

      add_header X-Proxy-Cache $upstream_cache_status;
      proxy_pass http://wordpress;
    }
    location /tacticalsales/api/ {
      add_header X-Frame-Options SAMEORIGIN;
      #limit_req zone=one;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;

      proxy_pass http://node-app/tacticalsales/api/;
    }


    location /tacticalsales/ {

      proxy_cache STATIC;
      proxy_cache_bypass $http_cache_control;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;

      add_header X-Proxy-Cache $upstream_cache_status;
      proxy_pass http://node-app/tacticalsales/;
    }
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_certificate /etc/nginx/ssl/flash2.local.crt;
    ssl_certificate_key /etc/nginx/ssl/flash2.local.key;

    ssl_session_cache shared:SSL:10m;

    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    #https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    #https://habrahabr.ru/post/252821/
    #Generate using `openssl dhparam -out dhparam.pem 4096` - it takes loooong time ~ 10 minutes and makes your laptop warm
    #data generated by Anatolij is included in code
  }

  #make a permanent redirect to https from http
  #http://nginx.org/en/docs/http/converting_rewrite_rules.html
  server {
    listen 80;
    return       301 https://$host$request_uri;

    add_header X-Frame-Options SAMEORIGIN;
    add_header Cache-Control "no-store";
    expires -1;
  }
}
